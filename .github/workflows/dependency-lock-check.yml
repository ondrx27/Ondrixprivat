name: Dependency Lock Check

on:
  pull_request:
    paths:
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/package.json'
      - '**/package-lock.json'
  push:
    branches: [main, master]
    paths:
      - '**/Cargo.toml'
      - '**/package.json'

jobs:
  check-solana-dependencies:
    name: Check Solana Contract Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check Solana Cargo.toml changes
        id: check_cargo
        run: |
          if git diff HEAD^ HEAD --name-only | grep -q "ondrix-escrow-solana/Cargo.toml"; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "⚠️  Solana Cargo.toml was modified!"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "✓ Solana Cargo.toml not modified"
          fi

      - name: Verify Solana exact versions
        if: steps.check_cargo.outputs.changed == 'true'
        working-directory: ./ondrix-escrow-solana
        run: |
          echo "=== Checking Cargo.toml for exact version locks ==="
          echo ""

          # Check for dependencies without = prefix
          if grep -E '^[[:space:]]*[a-z0-9_-]+ = "[^=]' Cargo.toml | grep -v '^\[' | grep -v 'crate-type' | grep -v 'features' | grep -v 'name\|version\|edition'; then
            echo ""
            echo "❌ ERROR: All dependencies must use exact versions"
            echo ""
            echo "Required format:"
            echo "  solana-program = \"=1.18\""
            echo "  spl-token = { version = \"=4.0\", ... }"
            echo "  chainlink_solana = \"=1.0.0\""
            echo ""
            exit 1
          fi

          echo "✅ Solana dependencies use exact versions"

      - name: Verify Chainlink version is locked
        if: steps.check_cargo.outputs.changed == 'true'
        working-directory: ./ondrix-escrow-solana
        run: |
          if ! grep -q 'chainlink_solana = "=1.0.0"' Cargo.toml; then
            echo "⚠️  WARNING: chainlink_solana version should be exactly =1.0.0"
          fi

  check-evm-dependencies:
    name: Check EVM Contract Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check EVM package.json changes
        id: check_npm
        run: |
          if git diff HEAD^ HEAD --name-only | grep -q "ondrix-escrow-evm/package.json"; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "⚠️  EVM package.json was modified!"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "✓ EVM package.json not modified"
          fi

      - name: Verify NPM exact versions
        if: steps.check_npm.outputs.changed == 'true'
        working-directory: ./ondrix-escrow-evm
        run: |
          echo "=== Checking package.json for version locks ==="
          echo ""

          # Check for ^ or ~ in dependencies
          if jq -r '.dependencies // {} | to_entries[] | "\(.key): \(.value)"' package.json | grep -E '[\^~]'; then
            echo ""
            echo "❌ ERROR: Dependencies must NOT use ^ or ~ prefixes"
            echo ""
            echo "Current requirements:"
            echo "  \"@chainlink/contracts\": \"0.6.1\""
            echo "  \"@openzeppelin/contracts\": \"5.0.0\""
            echo ""
            exit 1
          fi

          echo "✅ NPM dependencies locked without ^ or ~"

      - name: Verify critical dependencies
        if: steps.check_npm.outputs.changed == 'true'
        working-directory: ./ondrix-escrow-evm
        run: |
          echo "Verifying critical dependencies..."

          CHAINLINK=$(jq -r '.dependencies["@chainlink/contracts"] // "missing"' package.json)
          OZ=$(jq -r '.dependencies["@openzeppelin/contracts"] // "missing"' package.json)

          echo "  @chainlink/contracts: $CHAINLINK"
          echo "  @openzeppelin/contracts: $OZ"

          if [ "$CHAINLINK" = "missing" ]; then
            echo "❌ ERROR: @chainlink/contracts is missing"
            exit 1
          fi

          if [ "$OZ" = "missing" ]; then
            echo "❌ ERROR: @openzeppelin/contracts is missing"
            exit 1
          fi

          echo "✅ Critical dependencies present"

      - name: Setup Node.js
        if: steps.check_npm.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22.10.0'

      - name: Verify package-lock.json is in sync
        if: steps.check_npm.outputs.changed == 'true'
        working-directory: ./ondrix-escrow-evm
        run: |
          npm install --package-lock-only

          if ! git diff --quiet package-lock.json; then
            echo "❌ ERROR: package-lock.json is out of sync"
            echo "Run: npm install"
            exit 1
          fi

          echo "✅ package-lock.json is in sync"

  security-review-alert:
    name: Security Review Required
    runs-on: ubuntu-latest
    needs: [check-solana-dependencies, check-evm-dependencies]
    if: always()

    steps:
      - name: Alert for review
        run: |
          echo ""
          echo "================================================"
          echo "  ⚠️  DEPENDENCY LOCK VERIFICATION COMPLETE"
          echo "================================================"
          echo ""
          echo "Security Review Checklist:"
          echo ""
          echo "Solana Contract (ondrix-escrow-solana):"
          echo "  ✓ All Cargo.toml versions use exact match (=1.18)"
          echo "  ✓ chainlink_solana locked at =1.0.0"
          echo "  ✓ Run 'cargo audit' in ondrix-escrow-solana/"
          echo "  ✓ Run 'cargo build-sbf' to verify build"
          echo ""
          echo "EVM Contract (ondrix-escrow-evm):"
          echo "  ✓ No ^ or ~ in package.json dependencies"
          echo "  ✓ @chainlink/contracts at 0.6.1"
          echo "  ✓ @openzeppelin/contracts at 5.0.0"
          echo "  ✓ Run 'npm install' and commit package-lock.json"
          echo "  ✓ Run 'npx hardhat compile' to verify"
          echo ""
          echo "Both contracts:"
          echo "  ✓ Update .cargo/audit.toml if new advisories"
          echo "  ✓ Document reason for dependency changes"
          echo "  ✓ Security team approval obtained"
          echo "  ✓ Test all functionality after updates"
          echo ""
          echo "================================================"
